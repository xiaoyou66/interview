(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{427:function(e,r,t){"use strict";t.r(r);var n=t(21),o=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[e._v("#")]),e._v(" 基本概念")]),e._v(" "),t("p",[t("strong",[e._v("抽象语法树")])]),e._v(" "),t("p",[e._v("是源代码语法的结构的一种抽象表示，它用树状的方式表示编程语言的语法结构"),t("a",{attrs:{href:"https://draveness.me/golang/docs/part1-prerequisite/ch02-compile/golang-compile-intro/#fn:1",target:"_blank",rel:"noopener noreferrer"}},[e._v("1"),t("OutboundLink")],1),e._v("。抽象语法树中的每一个节点都表示源代码中的一个元素，每一棵子树都表示一个语法元素，")]),e._v(" "),t("p",[t("strong",[e._v("静态单赋值")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Static_single_assignment_form",target:"_blank",rel:"noopener noreferrer"}},[e._v("静态单赋值"),t("OutboundLink")],1),e._v("（Static Single Assignment、SSA）是中间代码的特性，如果中间代码具有静态单赋值的特性，那么每个变量就只会被赋值一次"),t("a",{attrs:{href:"https://draveness.me/golang/docs/part1-prerequisite/ch02-compile/golang-compile-intro/#fn:2",target:"_blank",rel:"noopener noreferrer"}},[e._v("2"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[t("strong",[e._v("指令集")])]),e._v(" "),t("p",[e._v("不同的机器有不同的指令集，包括复杂指令集合精简指令集")]),e._v(" "),t("h2",{attrs:{id:"编译原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译原理"}},[e._v("#")]),e._v(" 编译原理")]),e._v(" "),t("p",[e._v("因为这东西说起来比较复杂，我还没研究完，直接说一下大致流程")]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("词法与语法分析")])]),e._v(" "),t("li",[t("strong",[e._v("类型检查")])]),e._v(" "),t("li",[t("strong",[e._v("中间代码生成")])]),e._v(" "),t("li",[t("strong",[e._v("机器码生成")])])]),e._v(" "),t("p",[e._v("深入参考"),t("a",{attrs:{href:"https://draveness.me/golang/docs/part1-prerequisite/ch02-compile/golang-compile-intro/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Go 语言编译过程概述 | Go 语言设计与实现 (draveness.me)"),t("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=o.exports}}]);