(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{481:function(t,a,_){"use strict";_.r(a);var v=_(21),r=Object(v.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"基本概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),_("h3",{attrs:{id:"内存分页和内存分段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内存分页和内存分段"}},[t._v("#")]),t._v(" 内存分页和内存分段")]),t._v(" "),_("p",[t._v("内存分页分为一个页号还有一个偏移量，我们通过页号查找页表，找出对应地址，然后加上偏移量就可以得到最终地址")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img.xiaoyou66.com/2021/03/23/29f1ff4a1ccca.png",alt:"image-20210304165813475"}})]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img.xiaoyou66.com/2021/03/23/b954d7500b353.png",alt:"image-20210304165933575"}})]),t._v(" "),_("p",[t._v("内存分段的步骤如下")]),t._v(" "),_("ol",[_("li",[t._v("先提取段号")]),t._v(" "),_("li",[t._v("然后查找段表找出这段的起始物理地址")]),t._v(" "),_("li",[t._v("然后比较偏移量和端长度，如果超出则无效")]),t._v(" "),_("li",[t._v("物理地址等于 端起始地址+段内偏移量")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img.xiaoyou66.com/2021/03/23/02d1cc9ed2602.png",alt:"image-20210323223337442"}})]),t._v(" "),_("h3",{attrs:{id:"内存置换算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内存置换算法"}},[t._v("#")]),t._v(" 内存置换算法")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("最佳页面置换算法")]),t._v("OPT（Optimal replacement algorithm） 置换以后不需要或者最远的将来才需要的页面，是一种理论上的算法，是最优策略；")]),t._v(" "),_("li",[_("strong",[t._v("先进先出")]),t._v("FIFO 置换在内存中驻留时间最长的页面。缺点：有可能将那些经常被访问的页面也被换出，从而使缺页率升高；")]),t._v(" "),_("li",[_("strong",[t._v("第二次机会算法")]),t._v("SCR 按FIFO选择某一页面，若其访问位为1，给第二次机会，并将访问位置0；")]),t._v(" "),_("li",[_("strong",[t._v("时钟算法")]),t._v(" Clock：SCR中需要将页面在链表中移动（第二次机会的时候要将这个页面从链表头移到链表尾），时钟算法使用环形链表，再使用一个指针指向最老的页面，避免了移动页面的开销；")]),t._v(" "),_("li",[_("strong",[t._v("最近未使用算法")]),t._v("NRU（Not Recently Used） 检查访问位R、修改位M，优先置换R=M=0，其次是（R=0, M=1）；")]),t._v(" "),_("li",[_("strong",[t._v("最近最少使用算法")]),t._v("LRU（Least Recently Used） 置换出未使用时间最长的一页；实现方式：维护时间戳，或者维护一个所有页面的链表。当一个页面被访问时，将这个页面移到链表表头。这样就能保证链表表尾的页面是最近最久未访问的。")]),t._v(" "),_("li",[_("strong",[t._v("最不经常使用算法")]),t._v("NFU 置换出访问次数最少的页面")])]),t._v(" "),_("h3",{attrs:{id:"内部碎片和外部碎片"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内部碎片和外部碎片"}},[t._v("#")]),t._v(" 内部碎片和外部碎片")]),t._v(" "),_("ol",[_("li",[_("strong",[t._v("内部碎片")]),t._v("：已经被分配出去的的内存空间不经常使用，并且分配出去的内存空间大于请求所需的内存空间。")]),t._v(" "),_("li",[_("strong",[t._v("外部碎片")]),t._v("：指可用空间还没有分配出去，但是可用空间由于大小太小而无法分配给申请空间的新进程的内存空间空闲块。")])]),t._v(" "),_("h3",{attrs:{id:"快表-tlb"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#快表-tlb"}},[t._v("#")]),t._v(" 快表 TLB")]),t._v(" "),_("p",[t._v("也叫"),_("code",[t._v("地址转换后援缓冲器")]),t._v("实质是cache，它所缓存的是最近使用的数据的页表项（虚拟地址到物理地址的映射）。他的出现是为了加快访问数据（内存）的速度，减少重复的页表查找。当然它不是必须要有的。")]),t._v(" "),_("h3",{attrs:{id:"内存管理单元-mmu"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内存管理单元-mmu"}},[t._v("#")]),t._v(" 内存管理单元 MMU")]),t._v(" "),_("p",[t._v("是一种负责处理CPU内存访问请求的计算机硬件。它的功能包括"),_("strong",[t._v("虚拟地址到物理地址的转换、内存保护、中央处理器高速缓存的控制")]),t._v("。现代 CPU 基本上都选择了使用 MMU。")]),t._v(" "),_("h2",{attrs:{id:"linux内存管理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#linux内存管理"}},[t._v("#")]),t._v(" Linux内存管理")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img.xiaoyou66.com/2021/04/11/963ced689e508.jpg",alt:"img"}})]),t._v(" "),_("p",[t._v("这东西比较复杂，先暂时不深入，后续再研究研究")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/149581303",target:"_blank",rel:"noopener noreferrer"}},[t._v("linux内存管理（详解） - 知乎 (zhihu.com)"),_("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);