(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{580:function(s,t,a){"use strict";a.r(t);var e=a(21),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（"),a("a",{attrs:{href:"https://link.jianshu.com/?t=https://tools.ietf.org/html/rfc7519",target:"_blank",rel:"noopener noreferrer"}},[s._v("(RFC 7519"),a("OutboundLink")],1),s._v(").该token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。")]),s._v(" "),a("p",[s._v("jwt主要有下面这三部分组成")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img.xiaoyou66.com/images/2020/11/23/V4Usi.png",alt:"img"}})]),s._v(" "),a("h3",{attrs:{id:"基本信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本信息"}},[s._v("#")]),s._v(" 基本信息")]),s._v(" "),a("p",[s._v("我感觉我对JWT有严重的误解。。下面重新梳理一下吧。")]),s._v(" "),a("p",[s._v("首先最重要的就是JWT实际上要保存到客户端的，服务端不进行存储。客户端每次请求都会携带JWT数据，然后服务端那边只需要验证一下JWT是否合法即可（服务器可以通过JWT获取用户信息）。")]),s._v(" "),a("p",[s._v("JWT是无状态的，所以最重要的安全问题就是攻击者截取了Token数据后就可以伪造用户发送请求。")]),s._v(" "),a("p",[s._v("JWT其实返回的是一个JSON对象。但是为了防止数据被篡改，所以会加上签名")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img.xiaoyou66.com/2021/04/22/17aebd1859ec4.png",alt:"image-20210422160519448"}})]),s._v(" "),a("h3",{attrs:{id:"三个字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三个字段"}},[s._v("#")]),s._v(" 三个字段")]),s._v(" "),a("p",[s._v("下面一次介绍一下这三部分")]),s._v(" "),a("p",[a("strong",[s._v("header")])]),s._v(" "),a("p",[s._v("Header 部分是一个 JSON 对象，描述 JWT 的元数据，通常是下面的样子。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"alg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HS256"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typ"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"JWT"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("上面代码中，"),a("code",[s._v("alg")]),s._v("属性表示签名的算法（algorithm），默认是 HMAC SHA256（写成 HS256）；"),a("code",[s._v("typ")]),s._v("属性表示这个令牌（token）的类型（type），JWT 令牌统一写为"),a("code",[s._v("JWT")]),s._v("。")]),s._v(" "),a("p",[s._v("最后，将上面的 JSON 对象使用 Base64URL 算法（详见后文）转成字符串。")]),s._v(" "),a("p",[a("strong",[s._v("Payload")])]),s._v(" "),a("p",[s._v("Payload 部分也是一个 JSON 对象，用来存放实际需要传递的数据。JWT 规定了7个官方字段，供选用。")]),s._v(" "),a("ul",[a("li",[s._v("iss (issuer)：签发人")]),s._v(" "),a("li",[s._v("exp (expiration time)：过期时间")]),s._v(" "),a("li",[s._v("sub (subject)：主题")]),s._v(" "),a("li",[s._v("aud (audience)：受众")]),s._v(" "),a("li",[s._v("nbf (Not Before)：生效时间")]),s._v(" "),a("li",[s._v("iat (Issued At)：签发时间")]),s._v(" "),a("li",[s._v("jti (JWT ID)：编号")])]),s._v(" "),a("p",[s._v("除了官方字段，你还可以在这个部分定义私有字段，下面就是一个例子。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sub"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1234567890"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John Doe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"admin"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("blockquote",[a("p",[s._v("注意，JWT 默认是不加密的，任何人都可以读到，所以不要把秘密信息放在这个部分。")])]),s._v(" "),a("p",[a("strong",[s._v("签名字段")])]),s._v(" "),a("p",[s._v("Signature 部分是对前两部分的签名，防止数据篡改。")]),s._v(" "),a("p",[s._v("首先，需要指定一个密钥（secret）。这个密钥只有服务器才知道，不能泄露给用户。然后，使用 Header 里面指定的签名算法（默认是 HMAC SHA256），按照下面的公式产生签名。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HMACSHA256")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("base64UrlEncode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("base64UrlEncode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v('算出签名以后，把 Header、Payload、Signature 三个部分拼成一个字符串，每个部分之间用"点"（'),a("code",[s._v(".")]),s._v("）分隔，就可以返回给用户。")]),s._v(" "),a("h3",{attrs:{id:"常用的加密算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用的加密算法"}},[s._v("#")]),s._v(" 常用的加密算法")]),s._v(" "),a("p",[s._v("JWT中最常用的两种算法为"),a("code",[s._v("HMAC")]),s._v("和"),a("code",[s._v("RSA")]),s._v("。")]),s._v(" "),a("p",[a("code",[s._v("HMAC")]),s._v("是密钥相关的哈希运算消息认证码（Hash-based Message Authentication Code）的缩写，它是一种对称加密算法，使用相同的密钥对传输信息进行加解密。")]),s._v(" "),a("p",[a("code",[s._v("RSA")]),s._v("则是一种非对称加密算法，使用私钥加密明文，公钥解密密文。")]),s._v(" "),a("h3",{attrs:{id:"base64url"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#base64url"}},[s._v("#")]),s._v(" Base64URL")]),s._v(" "),a("p",[s._v("前面提到，Header 和 Payload 串型化的算法是 Base64URL。这个算法跟 Base64 算法基本类似，但有一些小的不同。")]),s._v(" "),a("p",[s._v("JWT 作为一个令牌（token），有些场合可能会放到 URL（比如 api.example.com/?token=xxx）。Base64 有三个字符"),a("code",[s._v("+")]),s._v("、"),a("code",[s._v("/")]),s._v("和"),a("code",[s._v("=")]),s._v("，在 URL 里面有特殊含义，所以要被替换掉："),a("code",[s._v("=")]),s._v("被省略、"),a("code",[s._v("+")]),s._v("替换成"),a("code",[s._v("-")]),s._v("，"),a("code",[s._v("/")]),s._v("替换成"),a("code",[s._v("_")]),s._v(" 。这就是 Base64URL 算法。")]),s._v(" "),a("h3",{attrs:{id:"jwt的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt的特点"}},[s._v("#")]),s._v(" JWT的特点")]),s._v(" "),a("p",[s._v("（1）JWT 默认是不加密，但也是可以加密的。生成原始 Token 以后，可以用密钥再加密一次。")]),s._v(" "),a("p",[s._v("（2）JWT 不加密的情况下，不能将秘密数据写入 JWT。")]),s._v(" "),a("p",[s._v("（3）JWT 不仅可以用于认证，也可以用于交换信息。有效使用 JWT，可以降低服务器查询数据库的次数。")]),s._v(" "),a("p",[s._v("（4）JWT 的最大缺点是，由于服务器不保存 session 状态，因此无法在使用过程中废止某个 token，或者更改 token 的权限。也就是说，一旦 JWT 签发了，在到期之前就会始终有效，除非服务器部署额外的逻辑。")]),s._v(" "),a("p",[s._v("（5）JWT 本身包含了认证信息，一旦泄露，任何人都可以获得该令牌的所有权限。为了减少盗用，JWT 的有效期应该设置得比较短。对于一些比较重要的权限，使用时应该再次对用户进行认证。")]),s._v(" "),a("p",[s._v("（6）为了减少盗用，JWT 不应该使用 HTTP 协议明码传输，要使用 HTTPS 协议传输。")]),s._v(" "),a("p",[s._v("参考：")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("JSON Web Token 入门教程 - 阮一峰的网络日志 (ruanyifeng.com)"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);