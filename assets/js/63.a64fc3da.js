(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{477:function(t,s,a){"use strict";a.r(s);var n=a(21),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"常用操作命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用操作命令"}},[t._v("#")]),t._v(" 常用操作命令")]),t._v(" "),a("h3",{attrs:{id:"数据库操作命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库操作命令"}},[t._v("#")]),t._v(" 数据库操作命令")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看数据库")]),t._v("\nshow dbs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换数据库（如果没有对应的数据库则创建）")]),t._v("\nuse 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建集合")]),t._v("\ndb.createCollection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("集合名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看集合")]),t._v("\nshow tables"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nshow collections"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除集合")]),t._v("\ndb.集合名.drop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除当前数据库")]),t._v("\ndb.dropDatabase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h3",{attrs:{id:"插入数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入数据"}},[t._v("#")]),t._v(" 插入数据")]),t._v(" "),a("div",{staticClass:"language-shel line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# 插入单条数据\ndb.集合名.insert(文档)\n# 例如：（如果没有 test ，会自动创建）\ndb.test.insert({name:"张三丰",birthday:new ISODate("1930-07-01"),gender:0,city:"HZ"});\n# 插入多条数据\ndb.集合名.insert([文档,文档])\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("插入数据时 _id 没有指定，系统会自动生成（可以指定），默认_id 类型是 ObjectId 类型是一个12字节 BSON 类型数据，由以下格式组成：")]),t._v(" "),a("ul",[a("li",[t._v('前 4 个字节表示时间戳 ObjectId("对象Id字符串").getTimestamp() 来获取；')]),t._v(" "),a("li",[t._v("接下来的 3 个字节是机器标识码；")]),t._v(" "),a("li",[t._v("紧接的两个字节由进程 id 组成（PID）；")]),t._v(" "),a("li",[t._v("最后三个字节是随机数;")])]),t._v(" "),a("h3",{attrs:{id:"数据查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据查询"}},[t._v("#")]),t._v(" 数据查询")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查询语句，没有条件或者空对象查询所有，sort 1 正序 -1 倒序，pretty 格式化")]),t._v("\ndb.集合名.find"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".sort"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key:1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".pretty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h4",{attrs:{id:"比较操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较操作"}},[t._v("#")]),t._v(" 比较操作")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("操作")]),t._v(" "),a("th",[t._v("条件格式")]),t._v(" "),a("th",[t._v("例子")]),t._v(" "),a("th",[t._v("RDBMS中的条件")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("等于")]),t._v(" "),a("td",[t._v("{key:value}")]),t._v(" "),a("td",[t._v("db.collection.find({字段名:值}).pretty()")]),t._v(" "),a("td",[t._v("where 字段名=值")])]),t._v(" "),a("tr",[a("td",[t._v("大于")]),t._v(" "),a("td",[t._v("{key:{$gt:value}}")]),t._v(" "),a("td",[t._v("db.collection.find({字段名:{$gt:值}}).pretty()")]),t._v(" "),a("td",[t._v("where 字段名>值")])]),t._v(" "),a("tr",[a("td",[t._v("小于")]),t._v(" "),a("td",[t._v("{key:{$lt:value}}")]),t._v(" "),a("td",[t._v("db.collection.find({字段名:{$lt:值}}).pretty()")]),t._v(" "),a("td",[t._v("where 字段名<值")])]),t._v(" "),a("tr",[a("td",[t._v("大于等于")]),t._v(" "),a("td",[t._v("{key:{$gte:value}}")]),t._v(" "),a("td",[t._v("db.collection.find({字段名:{$gte:值}}).pretty()")]),t._v(" "),a("td",[t._v("where 字段名>=值")])]),t._v(" "),a("tr",[a("td",[t._v("小于等于")]),t._v(" "),a("td",[t._v("{key:{$lte:value}}")]),t._v(" "),a("td",[t._v("db.collection.find({字段名:{$lte:值}}).pretty()")]),t._v(" "),a("td",[t._v("where 字段名<=值")])]),t._v(" "),a("tr",[a("td",[t._v("不等于")]),t._v(" "),a("td",[t._v("{key:{$ne:value}}")]),t._v(" "),a("td",[t._v("db.collection.find({字段名:{$ne:值}}).pretty()")]),t._v(" "),a("td",[t._v("where 字段名!=值")])])])]),t._v(" "),a("h4",{attrs:{id:"逻辑条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑条件"}},[t._v("#")]),t._v(" 逻辑条件")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("例子")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("and")]),t._v(" "),a("td",[t._v("db.集合名.find({key1:value1, key2:value2}).pretty()")])]),t._v(" "),a("tr",[a("td",[t._v("or")]),t._v(" "),a("td",[t._v("db.集合名.find({$or:[{key1:value1}, {key2:value2}]}).pretty()")])]),t._v(" "),a("tr",[a("td",[t._v("not")]),t._v(" "),a("td",[t._v("db.集合名.find({key:{$not:{$eq:value}}).pretty()")])])])]),t._v(" "),a("h4",{attrs:{id:"分页查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[t._v("#")]),t._v(" 分页查询")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("db.集合名.find"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".sort"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("排序字段:排序方式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v(".skip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("跳过的行数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".limit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("一页显示多少数据"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"数据更新命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据更新命令"}},[t._v("#")]),t._v(" 数据更新命令")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("# $set ：设置字段值\n# $unset "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("删除指定字段\n# $inc：在值得基础上加一个数\ndb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("集合名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("query"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" # 更新条件\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" # 上述操作\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    upsert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("boolean"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" # 默认 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("， "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" 表示 upsert\n    multi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("boolean"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" # 默认 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" 更新满足条件的所有\n    writeConcern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" # 指定 mongo 对写操作的回执行\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n# 例如\ndb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c_user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("multi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("h4",{attrs:{id:"数据删除命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据删除命令"}},[t._v("#")]),t._v(" 数据删除命令")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("db.collection.remove"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("query"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    justOne: "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("boolean"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(",\n    writeConcern: "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 参数说明：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  query（可选） :删除的文档的条件。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  justOne（可选，用默认为 false）:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      如果设为 true 或 1，则只删除一个文档")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      如果不设置该参数，则删除所有匹配条件的文档。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  writeConcern（可选）:用来指定 mongod 对写操作的回执行为")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h3",{attrs:{id:"聚合操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合操作"}},[t._v("#")]),t._v(" 聚合操作")]),t._v(" "),a("p",[t._v("聚合是 MongoDB 高级查询语言，它允许我们通过转化、合并多个文档的数据，来生成新的信息，例如：求最大值、最小值、平均值。也可以进行复杂数据统计、数据挖掘。聚合操作分为：单目的聚合操作(Single Purpose Aggregation Operation)、聚合管道(Aggregation Pipeline)、MapReduce 编程模型。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("单目聚合常用的有：count() 和 distinct()")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("db.c_user.find"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndb.c_user.distinct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("聚合管道：")]),t._v(" "),a("p",[t._v("语法："),a("code",[t._v("db.collection.aggregate(AGGREGATE_OPERATION)")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  例如: 统计 c_user 中各个 name 出现的次数")]),t._v("\ndb.c_user.aggregate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$group")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("_id:"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v(",count:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sum")]),t._v(":1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个名字的平均年龄")]),t._v("\ndb.c_user.aggregate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$group")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("_id:"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v(",avg:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$avg")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 获取每个 name 对应的年龄，返回值 {name:"张三",age_array:[12,34,53,47]}')]),t._v("\ndb.c_user.aggregate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$group")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("_id:"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v(",age_array:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$push")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("常用的聚合操作如下")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("表达式")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$sum")]),t._v(" "),a("td",[t._v("计算总和")])]),t._v(" "),a("tr",[a("td",[t._v("$avg")]),t._v(" "),a("td",[t._v("求平均值")])]),t._v(" "),a("tr",[a("td",[t._v("$min")]),t._v(" "),a("td",[t._v("获取对应值的最小值")])]),t._v(" "),a("tr",[a("td",[t._v("$max")]),t._v(" "),a("td",[t._v("获取对应值的最大值")])]),t._v(" "),a("tr",[a("td",[t._v("$first")]),t._v(" "),a("td",[t._v("获取第一个文档数据")])]),t._v(" "),a("tr",[a("td",[t._v("$last")]),t._v(" "),a("td",[t._v("获取最后一个文档数据")])]),t._v(" "),a("tr",[a("td",[t._v("$push")]),t._v(" "),a("td",[t._v("把得到的数据插入到数组中")])]),t._v(" "),a("tr",[a("td",[t._v("$addToSet")]),t._v(" "),a("td",[t._v("把得到的数据插入到 set 中")])])])])])]),t._v(" "),a("p",[t._v("MongoDB 中使用 "),a("code",[t._v("db.collection.aggregate([{},...])")]),t._v(" 方法来构建、使用聚合管道，每个文档在管道中经过一系列处理，输出相应结果。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("操作")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$group")]),t._v(" "),a("td",[t._v("将集合中的文档分组，可用于统计结果")])]),t._v(" "),a("tr",[a("td",[t._v("$project")]),t._v(" "),a("td",[t._v("修改输入文档的结构，用来重命名、增加或删除域、创建计算结果、嵌套文档")])]),t._v(" "),a("tr",[a("td",[t._v("$match")]),t._v(" "),a("td",[t._v("用于过滤数据，只输出符合条件的文档")])]),t._v(" "),a("tr",[a("td",[t._v("$limit")]),t._v(" "),a("td",[t._v("用来限制 MongoDB 返回的文档数")])]),t._v(" "),a("tr",[a("td",[t._v("$skip")]),t._v(" "),a("td",[t._v("在跳过指定数量的文档，返回余下文档")])]),t._v(" "),a("tr",[a("td",[t._v("$sort")]),t._v(" "),a("td",[t._v("将输入文档排序后输出")])]),t._v(" "),a("tr",[a("td",[t._v("$geoNear")]),t._v(" "),a("td",[t._v("输出接近某一地理位置的有序文档")])])])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 统计每个 name 的平均年龄，重新命名 avg ，输出 {name:"张三",age:12}，而不是 {name:"张三",avg:12}')]),t._v("\n  db.c_user.aggregate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$group")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("_id: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v(", avg:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$avg")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$project")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v(", age "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$avg")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 统计每个 name 出现次数，过滤小于等于 12 次的")]),t._v("\n  db.c_user.aggregate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$group")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("_id: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v(",count:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$match")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("count:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$gt")]),t._v(":12"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("ul",[a("li",[t._v("MapReduce 编程模型")])]),t._v(" "),a("p",[t._v("MapReduce 和 Pipeline 都能用于文档聚合， Pipeline 查询速度快于 MapReduce，MapReduce 能够在多台 Server 上并行执行复杂的聚合逻辑。MongoDB 不允许 Pipeline 的单个聚合操作占用过多的系统内存，如果一个聚合操作消耗 20% 以上的内存，MongoDB 就会停止操作，并向客户端输出错误消息。MapReduce 是一种计算模型，它将大批量的工作（数据）分解（MAP）执行，然后再将结果合并成最终结果（REDUCE）。")]),t._v(" "),a("p",[t._v("参考：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6876331143046627335#heading-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("MongoDB 入门及底层原理 (juejin.cn)"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);